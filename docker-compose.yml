version: '3.8'

services:
  postgres:
    container_name: db-postgres
    image: postgres:16.2
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: developmentpassword
      POSTGRES_DB: developmentdb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "developmentdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  backend:
    container_name: backend-container
    build: ./server/. 
    volumes:
      - ./server:/app
      - static_volume:/app/static
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"

  frontend:
    container_name: frontend-container
    build: ./client/.
    volumes:
      - ./client/src:/app/src
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - backend

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
    depends_on:
      - backend
      - frontend

volumes:
  postgres_dev_data:
  static_volume: